const t="is-valid",e="is-invalid",i=!1,s=["badInput","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valid","valueMissing"];class a{constructor(s){if(!s||"HTMLFormElement"!==s.constructor.name)throw new Error("Validator needs a form element");if(s.hasAttribute("novalidate"))return;this.form=s,this.elementsForValidation=[],this.validateFormElement=this.validateFormElement.bind(this),this.modifyElement=this.modifyElement.bind(this),this.debounced=function(t,e){let i;return function(...s){i&&clearTimeout(i),i=setTimeout((()=>{e(...s),i=null}),t)}}(300,this.validateFormElement),this.switchClasses=this.switchClasses.bind(this),this.notify=this.notify.bind(this);const a=this.form.dataset;this.options={validClass:a.validClass?a.validClass:t,invalidClass:a.invalidClass?a.invalidClass:e,liveCheck:!(!a.liveCheck||"true"!==a.liveCheck)||i},Array.from(this.form.elements).forEach((t=>this.modifyElement(t,"add")));this.observer=new MutationObserver(((t,e)=>{t.forEach((t=>{t.addedNodes.length>0&&Array.from(this.form.elements).filter((t=>!this.elementsForValidation.includes(t))).forEach((t=>this.modifyElement(t,"add"))),t.removedNodes.length>0&&this.elementsForValidation.filter((t=>!Array.from(this.form.elements).includes(t))).forEach((t=>this.modifyElement(t,"remove")))}))})),this.observer.observe(this.form,{attributes:!1,childList:!0,subtree:!0})}validateFormElement(t){if(!t||!t.target||t.target.form!==this.form)throw new Error("The element needs to be a children of a form element");t.target.setCustomValidity(""),t.target.checkValidity(),this.notify(t.target,t.target.validity.valid)}getCustomMessage(t,e){let i="";if(!t||!e)return i;const a=t.dataset;return a?(s.forEach((e=>{!0===t.validity[e]&&a[e]&&(i=a[e])})),i):i}modifyElement(t,e="add"){!t.hasAttribute("disabled")&&t.willValidate&&"FIELDSET"!==t.tagName&&"OUTPUT"!==t.tagName&&(this.elementsForValidation.push(t),t[`${e}EventListener`]("blur",this.validateFormElement,{passive:!0}),t[`${e}EventListener`]("change",this.validateFormElement,{passive:!0}),this.options.liveCheck&&t[`${e}EventListener`]("input",this.debounced,{passive:!0}))}dispose(){Array.from(this.form.elements).forEach((t=>this.modifyElement(t,"remove"))),this.observer.disconnect(),this.observer=null}switchClasses(t,e){e?(t.classList.remove(this.options.invalidClass),t.classList.add(this.options.validClass)):(t.classList.remove(this.options.validClass),t.classList.add(this.options.invalidClass))}notify(t,e){if(t.hasAttribute("disabled"))return;const i=t.getAttribute("type");t.setCustomValidity(this.getCustomMessage(t,t.type)),this.switchClasses(t,e),i&&"radio"===i&&this.elementsForValidation.filter((e=>e.name!==t.name)).forEach((t=>this.switchClasses(t,e))),t.reportValidity()}isValid(){let t;return this.elementsForValidation.forEach((e=>{e.setCustomValidity("");const i=e.checkValidity();this.notify(e,i),t||i||(t=e)})),!!this.form.checkValidity()||(t&&t.focus(),!1)}}export{a as Formally};
